name: Autorelease

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Run tests
        run: go test ./...

      - name: Set up Git user
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Get latest tag
        id: get_tag
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1) 2>/dev/null || echo "v0.0.0")
          echo "LATEST_TAG=$latest_tag" >> $GITHUB_ENV

      - name: Bump version
        id: bump_version
        run: |
          old=${{ env.LATEST_TAG }}
          if [[ $old =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            major=${BASH_REMATCH[1]}
            minor=${BASH_REMATCH[2]}
            patch=${BASH_REMATCH[3]}
            patch=$((patch+1))
            new="v$major.$minor.$patch"
          else
            new="v0.0.1"
          fi
          echo "NEW_TAG=$new" >> $GITHUB_ENV
          echo "new_tag=$new" >> $GITHUB_OUTPUT

      - name: Create and push tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          git tag ${{ env.NEW_TAG }}
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${REPO}.git ${{ env.NEW_TAG }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.NEW_TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
